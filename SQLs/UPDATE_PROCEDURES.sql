create or replace procedure INSERT_FACTURA  (p_CODIGO_CICLO IN VARCHAR2,p_NUMERO_CONTRATO IN NUMBER,p_MONTO_AMORTIZADO IN NUMBER,p_MONTO_REPORTADO IN NUMBER,p_CICLO_ASOCIADO_BILLING IN VARCHAR2,p_FECHA_FACTURA IN DATE,p_SUB_TOTAL IN NUMBER,p_TOTAL IN NUMBER) as
begin
insert into FACTURA (FACTURA.NUMERO_FACTURA,FACTURA.CODIGO_CICLO,FACTURA.NUMERO_CONTRATO,FACTURA.MONTO_AMORTIZADO,FACTURA.MONTO_REPORTADO,FACTURA.CICLO_ASOCIADO_BILLING,FACTURA.FECHA_FACTURA,FACTURA.SUB_TOTAL,FACTURA.TOTAL)
values(NUMERO_FACTURA_SEQ.NEXTVAL,p_CODIGO_CICLO,p_NUMERO_CONTRATO,p_MONTO_AMORTIZADO,p_MONTO_REPORTADO,p_CICLO_ASOCIADO_BILLING,p_FECHA_FACTURA,p_SUB_TOTAL,p_TOTAL);
end INSERT_FACTURA;

create or replace procedure INSERT_CONTRATO  (p_CODIGO_CUENTA IN VARCHAR2,p_NUMERO_IDENTIFICACION IN NUMBER,p_TIPO_IDENTIFICACION IN VARCHAR2,p_TIPO_CONTRATO IN VARCHAR2,p_FECHA_INICIO_CONTRATO IN DATE,p_NOMBRE_CONTRATO IN VARCHAR2,p_CANAL_COMUNICACION_CLIENTE IN VARCHAR2,p_DOCUMENTO_DIGITALIZADO IN VARCHAR2,p_INDICADOR_RENOV_CONT IN SMALLINT,p_TERMINOS_PAGO IN VARCHAR2,p_CANAL_VENTA IN VARCHAR2,p_RAZON_CANCELACION IN VARCHAR2,p_FECHA_CANCELACION IN DATE,p_FECHA_FINAL_CONTRATO IN DATE,p_CODIGO_STATUS_CONTRATO IN VARCHAR2,p_COSTO_CONTRATO IN NUMBER,p_FECHA_INICIO_FACTURACION IN DATE) as
begin
insert into CONTRATO (CONTRATO.NUMERO_CONTRATO,CONTRATO.CODIGO_CUENTA,CONTRATO.NUMERO_IDENTIFICACION,CONTRATO.TIPO_IDENTIFICACION,CONTRATO.TIPO_CONTRATO,CONTRATO.FECHA_INICIO_CONTRATO,CONTRATO.NOMBRE_CONTRATO,CONTRATO.CANAL_COMUNICACION_CLIENTE,CONTRATO.DOCUMENTO_DIGITALIZADO,CONTRATO.INDICADOR_RENOVACION_CONTRATO,CONTRATO.NUMERO_ORDEN,CONTRATO.TERMINOS_PAGO,CONTRATO.CANAL_VENTA,CONTRATO.RAZON_CANCELACION,CONTRATO.FECHA_CANCELACION,CONTRATO.FECHA_FINAL_CONTRATO,CONTRATO.CODIGO_STATUS_CONTRATO,CONTRATO.COSTO_CONTRATO,CONTRATO.FECHA_INICIO_FACTURACION)
values(NUMERO_CONTRATO_SEQ.NEXTVAL,p_CODIGO_CUENTA,p_NUMERO_IDENTIFICACION,p_TIPO_IDENTIFICACION,p_TIPO_CONTRATO,p_FECHA_INICIO_CONTRATO,p_NOMBRE_CONTRATO,p_CANAL_COMUNICACION_CLIENTE,p_DOCUMENTO_DIGITALIZADO,p_INDICADOR_RENOV_CONT,NUMERO_ORDEN_SEQ.NEXTVAL,p_TERMINOS_PAGO,p_CANAL_VENTA,p_RAZON_CANCELACION,p_FECHA_CANCELACION,p_FECHA_FINAL_CONTRATO,p_CODIGO_STATUS_CONTRATO,p_COSTO_CONTRATO,p_FECHA_INICIO_FACTURACION);
end INSERT_CONTRATO;

create or replace procedure UPDATE_CONTRATO  (p_NUMERO_CONTRATO IN NUMBER,p_CODIGO_CUENTA IN VARCHAR2,p_NUMERO_IDENTIFICACION IN NUMBER,p_TIPO_IDENTIFICACION IN VARCHAR2,p_TIPO_CONTRATO IN VARCHAR2,p_FECHA_INICIO_CONTRATO IN DATE,p_NOMBRE_CONTRATO IN VARCHAR2,p_CANAL_COMUNICACION_CLIENTE IN VARCHAR2,p_DOCUMENTO_DIGITALIZADO IN VARCHAR2,p_INDICADOR_RENOV_CONT IN SMALLINT,p_TERMINOS_PAGO IN VARCHAR2,p_CANAL_VENTA IN VARCHAR2,p_RAZON_CANCELACION IN VARCHAR2,p_FECHA_CANCELACION IN DATE,p_FECHA_FINAL_CONTRATO IN DATE,p_CODIGO_STATUS_CONTRATO IN VARCHAR2,p_COSTO_CONTRATO IN NUMBER,p_FECHA_INICIO_FACTURACION IN DATE) as
begin
update CONTRATO
set CONTRATO.CODIGO_CUENTA = p_CODIGO_CUENTA, CONTRATO.NUMERO_IDENTIFICACION = p_NUMERO_IDENTIFICACION, CONTRATO.TIPO_IDENTIFICACION = p_TIPO_IDENTIFICACION, CONTRATO.TIPO_CONTRATO = p_TIPO_CONTRATO, CONTRATO.FECHA_INICIO_CONTRATO = p_FECHA_INICIO_CONTRATO, CONTRATO.NOMBRE_CONTRATO = p_NOMBRE_CONTRATO, CONTRATO.CANAL_COMUNICACION_CLIENTE = p_CANAL_COMUNICACION_CLIENTE, CONTRATO.DOCUMENTO_DIGITALIZADO = p_DOCUMENTO_DIGITALIZADO, CONTRATO.INDICADOR_RENOVACION_CONTRATO = p_INDICADOR_RENOV_CONT, CONTRATO.TERMINOS_PAGO = p_TERMINOS_PAGO, CONTRATO.CANAL_VENTA = p_CANAL_VENTA, CONTRATO.RAZON_CANCELACION = p_RAZON_CANCELACION, CONTRATO.FECHA_CANCELACION = p_FECHA_CANCELACION, CONTRATO.FECHA_FINAL_CONTRATO = p_FECHA_FINAL_CONTRATO, CONTRATO.CODIGO_STATUS_CONTRATO = p_CODIGO_STATUS_CONTRATO, CONTRATO.COSTO_CONTRATO = p_COSTO_CONTRATO, CONTRATO.FECHA_INICIO_FACTURACION = p_FECHA_INICIO_FACTURACION
where (CONTRATO.NUMERO_CONTRATO = p_NUMERO_CONTRATO);
end UPDATE_CONTRATO;

create or replace procedure INSERT_CUENTA  (p_NUMERO_IDENTIFICACION IN NUMBER,p_TIPO_IDENTIFICACION IN VARCHAR2,p_PH_CODIGO_CUENTA IN VARCHAR2,p_PH_NUMERO_IDENTIFICACION IN NUMBER,p_PH_TIPO_IDENTIFICACION IN VARCHAR2,p_NOMBRE_CUENTA IN VARCHAR2,p_TIPO_CODIGO_CUENTA IN VARCHAR2,p_ULTIMA_FECHA_REAPERTURA IN DATE,p_FECHA_CREACION IN DATE,p_NOMBRE_EMPLEADO_CREADOR IN VARCHAR2,p_ESTADO_CUENTA IN VARCHAR2,p_ULTIMA_FECHA_SUSPENCION IN DATE,p_FECHA_CIERRE_TERMINO IN DATE,p_CICLO_ASOCIADO_CUENTA IN VARCHAR2,p_FECHA_EFECTIVA_CIERRE IN DATE,p_FECHA_EFECTIVA_INICIO IN DATE,p_FECHA_ULTIMA_ACTIVIDAD IN DATE,p_CATEGORIA_CREDITO IN NUMBER,p_DIAS_DESPUES_PAGO IN NUMBER) as
begin
insert into CUENTA (CUENTA.CODIGO_CUENTA,CUENTA.NUMERO_IDENTIFICACION,CUENTA.TIPO_IDENTIFICACION,CUENTA.PH_CODIGO_CUENTA,CUENTA.PH_NUMERO_IDENTIFICACION,CUENTA.PH_TIPO_IDENTIFICACION,CUENTA.NOMBRE_CUENTA,CUENTA.TIPO_CODIGO_CUENTA,CUENTA.ULTIMA_FECHA_REAPERTURA,CUENTA.FECHA_CREACION,CUENTA.CODIGO_SEGMENTO,CUENTA.NOMBRE_EMPLEADO_CREADOR,CUENTA.ESTADO_CUENTA,CUENTA.ULTIMA_FECHA_SUSPENCION,CUENTA.FECHA_CIERRE_TERMINO,CUENTA.CICLO_ASOCIADO_CUENTA,CUENTA.FECHA_EFECTIVA_CIERRE,CUENTA.FECHA_EFECTIVA_INICIO,CUENTA.FECHA_ULTIMA_ACTIVIDAD,CUENTA.CATEGORIA_CREDITO,CUENTA.DIAS_DESPUES_PAGO)
values(CODIGO_CUENTA_FUNCT,p_NUMERO_IDENTIFICACION,p_TIPO_IDENTIFICACION,p_PH_CODIGO_CUENTA,p_PH_NUMERO_IDENTIFICACION,p_PH_TIPO_IDENTIFICACION,p_NOMBRE_CUENTA,p_TIPO_CODIGO_CUENTA,p_ULTIMA_FECHA_REAPERTURA,p_FECHA_CREACION,CODIGO_SEGMENTO_FUNCT,p_NOMBRE_EMPLEADO_CREADOR,p_ESTADO_CUENTA,p_ULTIMA_FECHA_SUSPENCION,p_FECHA_CIERRE_TERMINO,p_CICLO_ASOCIADO_CUENTA,p_FECHA_EFECTIVA_CIERRE,p_FECHA_EFECTIVA_INICIO,p_FECHA_ULTIMA_ACTIVIDAD,p_CATEGORIA_CREDITO,p_DIAS_DESPUES_PAGO);
end INSERT_CUENTA;

create or replace procedure INSERT_CUENTA  (p_NUMERO_IDENTIFICACION IN NUMBER,p_TIPO_IDENTIFICACION IN VARCHAR2,p_PH_CODIGO_CUENTA IN VARCHAR2,p_PH_NUMERO_IDENTIFICACION IN NUMBER,p_PH_TIPO_IDENTIFICACION IN VARCHAR2,p_NOMBRE_CUENTA IN VARCHAR2,p_TIPO_CODIGO_CUENTA IN VARCHAR2,p_ULTIMA_FECHA_REAPERTURA IN DATE,p_FECHA_CREACION IN DATE,p_NOMBRE_EMPLEADO_CREADOR IN VARCHAR2,p_ESTADO_CUENTA IN VARCHAR2,p_ULTIMA_FECHA_SUSPENCION IN DATE,p_FECHA_CIERRE_TERMINO IN DATE,p_CICLO_ASOCIADO_CUENTA IN VARCHAR2,p_FECHA_EFECTIVA_CIERRE IN DATE,p_FECHA_EFECTIVA_INICIO IN DATE,p_FECHA_ULTIMA_ACTIVIDAD IN DATE,p_CATEGORIA_CREDITO IN NUMBER,p_DIAS_DESPUES_PAGO IN NUMBER) as
begin
insert into CUENTA (CUENTA.CODIGO_CUENTA,CUENTA.NUMERO_IDENTIFICACION,CUENTA.TIPO_IDENTIFICACION,CUENTA.PH_CODIGO_CUENTA,CUENTA.PH_NUMERO_IDENTIFICACION,CUENTA.PH_TIPO_IDENTIFICACION,CUENTA.NOMBRE_CUENTA,CUENTA.TIPO_CODIGO_CUENTA,CUENTA.ULTIMA_FECHA_REAPERTURA,CUENTA.FECHA_CREACION,CUENTA.CODIGO_SEGMENTO,CUENTA.NOMBRE_EMPLEADO_CREADOR,CUENTA.ESTADO_CUENTA,CUENTA.ULTIMA_FECHA_SUSPENCION,CUENTA.FECHA_CIERRE_TERMINO,CUENTA.CICLO_ASOCIADO_CUENTA,CUENTA.FECHA_EFECTIVA_CIERRE,CUENTA.FECHA_EFECTIVA_INICIO,CUENTA.FECHA_ULTIMA_ACTIVIDAD,CUENTA.CATEGORIA_CREDITO,CUENTA.DIAS_DESPUES_PAGO)
values(CODIGO_CUENTA_FUNCT,p_NUMERO_IDENTIFICACION,p_TIPO_IDENTIFICACION,p_PH_CODIGO_CUENTA,p_PH_NUMERO_IDENTIFICACION,p_PH_TIPO_IDENTIFICACION,p_NOMBRE_CUENTA,p_TIPO_CODIGO_CUENTA,p_ULTIMA_FECHA_REAPERTURA,p_FECHA_CREACION,CODIGO_SEGMENTO_FUNCT,p_NOMBRE_EMPLEADO_CREADOR,p_ESTADO_CUENTA,p_ULTIMA_FECHA_SUSPENCION,p_FECHA_CIERRE_TERMINO,p_CICLO_ASOCIADO_CUENTA,p_FECHA_EFECTIVA_CIERRE,p_FECHA_EFECTIVA_INICIO,p_FECHA_ULTIMA_ACTIVIDAD,p_CATEGORIA_CREDITO,p_DIAS_DESPUES_PAGO);
end INSERT_CUENTA;



 CREATE SEQUENCE NUMERO_FACTURA_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE NUMERO_CONTRATO_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE NUMERO_ORDEN_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE CODIGO_CUENTA_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE CODIGO_SEGMENTO_SEQ
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 
CREATE OR REPLACE FUNCTION CODIGO_CUENTA_FUNCT RETURN VARCHAR2 AS 
BEGIN
RETURN ('ACC-'||to_char(CODIGO_CUENTA_SEQ.NEXTVAL,'FM000000') );
END CODIGO_CUENTA_FUNCT;


CREATE OR REPLACE FUNCTION CODIGO_SEGMENTO_FUNCT RETURN VARCHAR2 AS 
BEGIN
  RETURN ('SC-'||to_char(CODIGO_SEGMENTO_SEQ.NEXTVAL,'FM000000') );
END CODIGO_SEGMENTO_FUNCT;
